Styling Guide for SimpleTidbits
===============================

When adding to simpletidbits, please adhere to this styling guide.

NB: This styling guide is in alpha and is subject to change.


Apple's Style Guide
-------------------

This guide is in addition to [Apple's Style Guide][asg]. Please conform to Apple's Style Guide as well. A great intro is available at CocoaDevCentral [here][cdd1] and [here][cdd2].

  [asg]: http://developer.apple.com/documentation/Cocoa/Conceptual/CodingGuidelines/index.html
  [cdd1]: http://www.cocoadevcentral.com/articles/000082.php
  [cdd2]: http://www.cocoadevcentral.com/articles/000083.php


Spacing
-------

*   Use spaces instead of tabs
*   One tab is 4 spaces
*   Never go past 80 characters on one line
*   Use tabs to separate things on the same line. This is so code becomes kind of columnized and easier to sort quickly through. I find this makes code much easier to read. For example:

        NSString     *string     = @"string";
        BOOL         myBool      = NO;


Categories
----------

Methods should start with the prefix 'st_'. This is to avoid method name collisions with other categories a developer might add to his project.


Classes
-------

*   All class member variables should start with a leading underscore and accessed through properties both outside and inside the class.
*   Use @protected for variables that should be accessible to subclasses.
*   Create public and private properties to access member variables where applicable. Do not access member variables directly except for in your `init`, `dealloc`, `getter`, and `setter`.
*   Private methods that must be put in the public implementation (maybe for subclasses to override) should start with the prefix 'st_'. This tells other classes this is a private method and should not be called.
*   Private methods in the private interface should also be prefixed with 'st_'. This is so other subclasses won't accidentally override a private method.
*   Private properties should be prefixed with 'st_' as well for the same reason.